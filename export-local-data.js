const { PrismaClient } = require('@prisma/client');
const fs = require('fs');

const prisma = new PrismaClient();

async function exportData() {
  console.log('üì§ –≠–∫—Å–ø–æ—Ä—Ç –¥–∞–Ω–Ω—ã—Ö –∏–∑ –ª–æ–∫–∞–ª—å–Ω–æ–π PostgreSQL...');

  try {
    // –ß–∏—Ç–∞–µ–º –≤—Å–µ –¥–∞–Ω–Ω—ã–µ
    const users = await prisma.user.findMany();
    const employees = await prisma.employee.findMany();
    const inventory = await prisma.inventory.findMany();
    const inventoryAddons = await prisma.inventoryAddon.findMany();
    const sizNorms = await prisma.sizNorm.findMany();

    const data = {
      users,
      employees,
      inventory,
      inventoryAddons,
      sizNorms,
    };

    const outputPath = './local-data-export.json';
    fs.writeFileSync(outputPath, JSON.stringify(data, null, 2));

    console.log('‚úÖ –î–∞–Ω–Ω—ã–µ —ç–∫—Å–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω—ã:');
    console.log(`üë• –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏: ${users.length}`);
    console.log(`üë∑ –°–æ—Ç—Ä—É–¥–Ω–∏–∫–∏: ${employees.length}`);
    console.log(`üì¶ –ò–Ω–≤–µ–Ω—Ç–∞—Ä—å: ${inventory.length}`);
    console.log(`üîß –î–æ–ø–æ–ª–Ω–µ–Ω–∏—è: ${inventoryAddons.length}`);
    console.log(`üìè –ù–æ—Ä–º—ã —Ä–∞–∑–º–µ—Ä–æ–≤: ${sizNorms.length}`);
    console.log(`\nüíæ –§–∞–π–ª —Å–æ—Ö—Ä–∞–Ω–µ–Ω: ${outputPath}`);

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ —ç–∫—Å–ø–æ—Ä—Ç–∞ –¥–∞–Ω–Ω—ã—Ö:', error);
  } finally {
    await prisma.$disconnect();
  }
}

exportData();
