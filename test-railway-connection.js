const { PrismaClient } = require('@prisma/client');

console.log('üîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Railway PostgreSQL...');
console.log('DATABASE_URL:', process.env.DATABASE_URL);

async function testConnection() {
  try {
    console.log('üì° –°–æ–∑–¥–∞–Ω–∏–µ Prisma –∫–ª–∏–µ–Ω—Ç–∞...');
    const prisma = new PrismaClient({
      log: ['query', 'info', 'warn', 'error'],
    });

    console.log('üì° –ü–æ–ø—ã—Ç–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è...');
    
    // –ü—Ä–æ—Å—Ç–æ–π –∑–∞–ø—Ä–æ—Å –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
    const result = await prisma.$queryRaw`SELECT 1 as test`;
    console.log('‚úÖ –†–µ–∑—É–ª—å—Ç–∞—Ç –∑–∞–ø—Ä–æ—Å–∞:', result);
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ —Ç–∞–±–ª–∏—Ü—ã
    console.log('üìã –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–∞–±–ª–∏—Ü...');
    const tables = await prisma.$queryRaw`
      SELECT table_name 
      FROM information_schema.tables 
      WHERE table_schema = 'public'
    `;
    console.log('üìã –ù–∞–π–¥–µ–Ω–Ω—ã–µ —Ç–∞–±–ª–∏—Ü—ã:', tables);
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–∞–Ω–Ω—ã–µ –≤ —Ç–∞–±–ª–∏—Ü–∞—Ö
    console.log('üìä –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–∞–Ω–Ω—ã—Ö...');
    const userCount = await prisma.user.count();
    const employeeCount = await prisma.employee.count();
    console.log(`üë• –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏: ${userCount}`);
    console.log(`üë∑ –°–æ—Ç—Ä—É–¥–Ω–∏–∫–∏: ${employeeCount}`);
    
    console.log('‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Railway PostgreSQL —É—Å–ø–µ—à–Ω–æ!');
    console.log('üóÑÔ∏è –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –≥–æ—Ç–æ–≤–∞ –¥–ª—è —Ä–∞–±–æ—Ç—ã');
    
    await prisma.$disconnect();
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Railway PostgreSQL:');
    console.error('–¢–∏–ø –æ—à–∏–±–∫–∏:', error.constructor.name);
    console.error('–°–æ–æ–±—â–µ–Ω–∏–µ:', error.message);
    console.error('–ö–æ–¥ –æ—à–∏–±–∫–∏:', error.code);
    
    console.log('\nüí° –í–æ–∑–º–æ–∂–Ω—ã–µ —Ä–µ—à–µ–Ω–∏—è:');
    console.log('1. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, —á—Ç–æ Railway PostgreSQL —Å–µ—Ä–≤–∏—Å –∑–∞–ø—É—â–µ–Ω');
    console.log('2. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ DATABASE_URL –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π');
    console.log('3. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç-—Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ');
    console.log('4. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ - Railway –º–æ–∂–µ—Ç –±—ã—Ç—å –≤ –ø—Ä–æ—Ü–µ—Å—Å–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏');
    
    console.log('\nüîß –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –≤ Railway Dashboard:');
    console.log('- PostgreSQL —Å–µ—Ä–≤–∏—Å –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å "Running"');
    console.log('- –í –ª–æ–≥–∞—Ö –Ω–µ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –æ—à–∏–±–æ–∫');
    console.log('- DATABASE_URL –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –∞–∫—Ç—É–∞–ª—å–Ω—ã–º');
  }
}

testConnection();
